{
  "name": "BB",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_declaration"
      }
    },
    "_declaration": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "inherit"
        },
        {
          "type": "SYMBOL",
          "name": "require"
        },
        {
          "type": "SYMBOL",
          "name": "addtask"
        },
        {
          "type": "SYMBOL",
          "name": "export"
        },
        {
          "type": "SYMBOL",
          "name": "include"
        },
        {
          "type": "SYMBOL",
          "name": "python_task_declaration"
        },
        {
          "type": "SYMBOL",
          "name": "task_declaration"
        },
        {
          "type": "SYMBOL",
          "name": "variable_declaration"
        },
        {
          "type": "SYMBOL",
          "name": "comment"
        }
      ]
    },
    "variable_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "export"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "="
            },
            {
              "type": "STRING",
              "value": ".="
            },
            {
              "type": "STRING",
              "value": "+="
            },
            {
              "type": "STRING",
              "value": ":="
            },
            {
              "type": "STRING",
              "value": "?="
            },
            {
              "type": "STRING",
              "value": "??="
            },
            {
              "type": "STRING",
              "value": "=+"
            },
            {
              "type": "STRING",
              "value": "=."
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "task_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "SYMBOL",
          "name": "block"
        }
      ]
    },
    "python_task_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "python"
        },
        {
          "type": "SYMBOL",
          "name": "task_declaration"
        }
      ]
    },
    "block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "statement"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "[^\\n]+"
        }
      ]
    },
    "inherit": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "inherit"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "PATTERN",
            "value": "[^ \\n]+"
          }
        },
        {
          "type": "STRING",
          "value": "\n"
        }
      ]
    },
    "require": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "require"
        },
        {
          "type": "SYMBOL",
          "name": "_require_path"
        },
        {
          "type": "STRING",
          "value": "\n"
        }
      ]
    },
    "_require_path": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT1",
          "content": {
            "type": "PATTERN",
            "value": "[^\\n]*"
          }
        }
      ]
    },
    "addtask": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "addtask"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "PATTERN",
          "value": "\\n"
        }
      ]
    },
    "export": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "export"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "PATTERN",
          "value": "\\n"
        }
      ]
    },
    "include": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "include"
        },
        {
          "type": "PATTERN",
          "value": "[^ \\n]+"
        },
        {
          "type": "PATTERN",
          "value": "\\n"
        }
      ]
    },
    "string": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "\""
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "string_expansion"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "string_escape"
                  },
                  {
                    "type": "PATTERN",
                    "value": "[^\"]"
                  }
                ]
              }
            },
            {
              "type": "STRING",
              "value": "\""
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "string2"
        }
      ]
    },
    "string2": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "'"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "PATTERN",
            "value": "[^']"
          }
        },
        {
          "type": "STRING",
          "value": "'"
        }
      ]
    },
    "string_expansion": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "${"
        },
        {
          "type": "PATTERN",
          "value": "[^}]*"
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "string_escape": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\\\\"
        },
        {
          "type": "PATTERN",
          "value": "\""
        }
      ]
    },
    "override": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": ":"
          },
          {
            "type": "PATTERN",
            "value": "[a-zA-Z0-9_${}\\-]+"
          }
        ]
      }
    },
    "identifier": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "[@A-Za-z0-9_{}$\\-\\[\\]\\.]+"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "override"
          }
        }
      ]
    },
    "comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#"
        },
        {
          "type": "PATTERN",
          "value": ".*"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

